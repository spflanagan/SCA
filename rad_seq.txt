Comparing ddRAD-seq and sdRAD-seq
Notes started: 13 September 2016

So, sdRAD and ddRAD have significant allele frequency differences. What to do about it?
Outline of the approach:
1. Analyze the two datasets together in one stacks run
	-Variance in coverage across individuals in combined analysis
	-Private alleles in the two datasets
	-#reads/individual for loci
2. Analyze each dataset separately in separate stacks runs
	-#reads/individual
	-overall levels of heterozygosity
	-levels of polymorphism
	-are the loci the same?
3. in silico digestion of the genome, assuming different types of error.

Overall: try to distinguish between allelic dropout, shearing bias, and PCR bias, if possible




#############################################LAB BOOK###########################################
#####Thursday, 22 September 2016
Added single-digest to the in-silico digest
That included simulating shearing, so I'm trying out a process where:
	(1) if the mean fragment size > 500 with the new fragment, then If
	(2) randomly break up the fragment into x pieces, where x=fragment length/500
	(3) if there are multiple shears, I do subsequent shears on the longest fragments.
I'm going to see if this gives me a somewhat normal distribution of fragment sizes centered around 500.
I think this incorporates shearing bias without having to give it an explicit rate, but I'm not 100% sure.
I need to think about that.

Something about the output isn't right but I need to take a break.

 
#####Wednesday, 21 September 2016
I narrowed down my focus to only loci with missingness > 0.5, which reduced the number of loci 
Now able to do the analysis, and the Ref/Alt and variance in coverage are significantly different among plates
->suggests PCR duplicates are the culprit

in silico digest: after trying to figure out why it's been infinite-looping, I finally figured out that .find() returns -1 if it doesn't find a match
Now, I need to keep fragments only in the 250-700 range (keep it broad for now)
What do I want to do with it? 
	-Add allelic dropout
	-Add PCR duplicates
	-Add genotyping errors?
	
So, I need to implement sampling. First, I'm going to test it on the whole genome, make sure it will run through the entire fasta file correctly.
^That worked! Success. Now, do I want to keep the sequences? Or just continue as-is and when I sample arbitrarily give individuals a value of 0 or 1 to represent SNPs?
I think for now I'll sample arbitrarily.
I also need to do both the double and single digest to compare them.

#####Tuesday, 20 September 2016
Looking at the different ddRAD plates, and it is not clear what is going on.
I need to use locus as a random effect, but this takes over the computer (too many loci)

#####Friday, 16 September 2016
Summary so far:
-Assembling them together gets weird results, including elevated Fsts, lower coverage for sdRAD
-sdRAD has lower Alt/Ref ratios than ddRAD
-sdRAD has higher variance in coverage and fewer heterozygotes
-generally, loci shared among separate analyses have same ref/alt.

RE: Fst..if they're assembled separately, FST is centered arond 0 and a lot are negative. 
This is also true if you take the ones that were analyzed together but only keep the loci shared between the two separate assemblies.
If you just prune for coverage (50%  in each pop) you get a WEIRD distribution with lots of Fst=1.

populations was killed...trying:
populations -b 3 -P ./results/stacks_both/ -M ./sca_popmap_sdvsdd.txt -r 0.5 -a 0.05 --vcf --plink -m 3 -t 4

#####Thursday, 15 September 2016
Running populations on 'both'
sca_popmap_sdvsdd.txt

populations -b 3 -P ./results/stacks_both/ -M ./sca_popmap_sdvsdd.txt -r 0.5 -a 0.05 --fstats --vcf --plink -m 3

Meanwhile...
in-silico digestion: while reading fasta file, I'm digesting each sequence as it comes (rather than storing them)
Outputting: Fragment	StartBP	EndBP	FragmentLength	StartEnz	EndEnz
Enzyme codes: 0 = start of sequence, 1 = PstI, 2 = MboI, 3 = end of sequence
Only searching for 5'-3' enzyme recognition sequence

Analysis of allele dropout vs. PCR bias: sdRAD has lower heterozygosity and lower ratios than ddRAD and higher variance when compared to a subsample of ddRAD (males and females only)

49893 SNPs are the same in ddRAD and sdRAD analyses (assembled separately)...
weird issue: some SNPs are found in multiple RAD loci in ddRAD?
#####Wednesday, 14 September 2016
Is the total number of reads per individual different when assembled together vs separately?
	> wilcox.test(oc$NumReadsTogether,oc$NumReadsAlone,paired=T,alternative="less")

		Wilcoxon signed rank test with continuity correction

	data:  oc$NumReadsTogether and oc$NumReadsAlone
	V = 0, p-value = 8.357e-12
	alternative hypothesis: true location shift is less than 0

	> wilcox.test(dc$NumReadsTogether,dc$NumReadsAlone,paired=T,alternative="greater")

		Wilcoxon signed rank test with continuity correction

	data:  dc$NumReadsTogether and dc$NumReadsAlone
	V = 73920, p-value < 2.2e-16
	alternative hypothesis: true location shift is greater than 0

I should plot the by-locus coverage too.
OK--maybe put all of them together so it's a comparison of the two tests.
For the by-locus coverage, they all seem pretty similar whether assembled together or separately.
	> wilcox.test(loc.cov$oRAD.AvgCovRatio,o.cov$AvgCovRatio)#less

		Wilcoxon rank sum test with continuity correction

	data:  loc.cov$oRAD.AvgCovRatio and o.cov$AvgCovRatio
	W = 3.0348e+10, p-value < 2.2e-16
	alternative hypothesis: true location shift is not equal to 0

	> wilcox.test(loc.cov$dRAD.AvgCovRatio,d.cov$AvgCovRatio)#greater

		Wilcoxon rank sum test with continuity correction

	data:  loc.cov$dRAD.AvgCovRatio and d.cov$AvgCovRatio
	W = 1.1963e+10, p-value < 2.2e-16
	alternative hypothesis: true location shift is not equal to 0

	> wilcox.test(loc.cov$AvgCovTotal.x,o.cov$AvgCovTotal)#less

		Wilcoxon rank sum test with continuity correction

	data:  loc.cov$AvgCovTotal.x and o.cov$AvgCovTotal
	W = 3.7692e+10, p-value = 0.04538
	alternative hypothesis: true location shift is not equal to 0

	> wilcox.test(loc.cov$AvgCovTotal.y,d.cov$AvgCovTotal)#greater

		Wilcoxon rank sum test with continuity correction

	data:  loc.cov$AvgCovTotal.y and d.cov$AvgCovTotal
	W = 1.0705e+10, p-value < 2.2e-16
	alternative hypothesis: true location shift is not equal to 0

	BUT statistically, sdRAD has lower coverage when assembled together and ddRAD has lower coverage when assembled separately.
	
sdRAD has lower coverage than ddRAD
	> wilcox.test(o.cov$AvgCovTotal,d.cov$AvgCovTotal,"less")

		Wilcoxon rank sum test with continuity correction

	data:  o.cov$AvgCovTotal and d.cov$AvgCovTotal
	W = 7379800000, p-value < 2.2e-16
	alternative hypothesis: true location shift is less than 0
but sdRAD is less skewed toward reference allele than ddRAD
	> wilcox.test(o.cov$AvgCovRatio,d.cov$AvgCovRatio,"less")

		Wilcoxon rank sum test with continuity correction

	data:  o.cov$AvgCovRatio and d.cov$AvgCovRatio
	W = 8592100000, p-value = 0.002174
	alternative hypothesis: true location shift is less than 0
..regardless of whether they're assembled together or separately. (can I do this analysis somehow more elegantly?)
	> summary(aov(lc.comp$AvgCovRatio~lc.comp$LibraryPrep*lc.comp$Assembly))
											 Df    Sum Sq   Mean Sq F value Pr(>F)    
	lc.comp$LibraryPrep                       1 1.385e+09 1.385e+09  1213.1 <2e-16 ***
	lc.comp$Assembly                          1 1.760e+08 1.760e+08   154.1 <2e-16 ***
	lc.comp$LibraryPrep:lc.comp$Assembly      1 3.688e+08 3.688e+08   322.9 <2e-16 ***
	Residuals                            923467 1.055e+12 1.142e+06                   
	---
	Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
	5 observations deleted due to missingness
	> summary(aov(lc.comp$AvgCovTotal~lc.comp$LibraryPrep*lc.comp$Assembly))
											 Df    Sum Sq Mean Sq F value   Pr(>F)    
	lc.comp$LibraryPrep                       1 3.464e+04   34637   7.837  0.00512 ** 
	lc.comp$Assembly                          1 1.111e+06 1110605 251.273  < 2e-16 ***
	lc.comp$LibraryPrep:lc.comp$Assembly      1 2.880e+05  287958  65.150 6.95e-16 ***
	Residuals                            923467 4.082e+09    4420                     
	---
	Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
	5 observations deleted due to missingness
	
Variance in coverage:
	oRAD has higher variance in coverage..
	> wilcox.test(log(o.cov$CovVariance+1),log(d.cov$CovVariance+1),"greater")

		Wilcoxon rank sum test with continuity correction

	data:  log(o.cov$CovVariance + 1) and log(d.cov$CovVariance + 1)
	W = 8914700000, p-value < 2.2e-16
	alternative hypothesis: true location shift is greater than 0

	->due to more loci? subsample both of them-->still sig, but not as much (probably real??)
	->could be due to PCR duplicates rather than allele dropout--what does heterozygosity do?
	
ddRAD has higher proportion of heterozygotes at loci.
	> wilcox.test(o.cov$PropHet,d.cov$PropHet,"less")

		Wilcoxon rank sum test with continuity correction

	data:  o.cov$PropHet and d.cov$PropHet
	W = 7296700000, p-value < 2.2e-16
	alternative hypothesis: true location shift is less than 0

Assembled together:
	> wilcox.test(bo.cov$CovVariance,bd.cov$CovVariance,paired=T,"less")

		Wilcoxon signed rank test with continuity correction

	data:  bo.cov$CovVariance and bd.cov$CovVariance
	V = 1727900000, p-value < 2.2e-16
	alternative hypothesis: true location shift is less than 0
	
	> wilcox.test(bo.cov$PropHet,bd.cov$PropHet,paired=T,"less")

		Wilcoxon signed rank test with continuity correction

	data:  bo.cov$PropHet and bd.cov$PropHet
	V = 908260000, p-value < 2.2e-16
	alternative hypothesis: true location shift is less than 0
	
Assembled together, sdRAD has lower variance in coverage but still has fewer heterozygotes.

Suggesting that if they are assembled together, the PCR duplicates issue in sdRAD is ameliorated?? 
	> summary(aov(lc.comp$PropHet~lc.comp$LibraryPrep*lc.comp$Assembly))
											 Df Sum Sq Mean Sq  F value Pr(>F)    
	lc.comp$LibraryPrep                       1     98   98.04 3577.429 <2e-16 ***
	lc.comp$Assembly                          1    141  141.39 5159.532 <2e-16 ***
	lc.comp$LibraryPrep:lc.comp$Assembly      1      0    0.17    6.377 0.0116 *  
	Residuals                            489229  13407    0.03                    
	---
	Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
	3 observations deleted due to missingness
	> summary(aov(log(lc.comp$CovVariance+1)~lc.comp$LibraryPrep*lc.comp$Assembly))
											 Df Sum Sq Mean Sq F value   Pr(>F)    
	lc.comp$LibraryPrep                       1    130  129.50  163.37  < 2e-16 ***
	lc.comp$Assembly                          1    263  263.15  331.98  < 2e-16 ***
	lc.comp$LibraryPrep:lc.comp$Assembly      1     19   18.94   23.89 1.02e-06 ***
	Residuals                            489215 387782    0.79                     
	---
	Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
	17 observations deleted due to missingness


In-silico digestion: segmentation fault recorded overnight
->could this be due to maxing out memory by storing too many seqs? 
	->probably not, but checking it out by writing directly to the file.
		->maxed out the storage space, need to find another solution.
	Process each sequence as I read it in from fasta file--don't need to store the fasta
	print out the length of each fragment
	*I didn't want to deal with processing each sequence right now, for now I'm just printing out the length of each fragment into the output file.
	**Rather than dealing with sequences, what if i deal with fragment sizes and identity of enzyme on either side?

	Output:
		23407086 fragments on LG1
		9912669 fragments on LG10
		11493655 fragments on LG11
		13251395 fragments on LG12
		8483744 fragments on LG13
		13101037 fragments on LG14
		10552769 fragments on LG15
		9810463 fragmentson LG16
		9684039 fragments on LG17
		7908134 fragments on LG18
		7424705 fragments on LG19
		21572244 fragments on LG2
		
	
#####Tuesday, 13 September 2016
Starting with the dataset when it was assembled together:
for each locus, calculate average coverage per individual for the two datasets.
Wrote a function to calculate coverage statistics for subsets of individuals (e.g. orad and drad).
It also reports # of heterozygotes

This way I can compare the two. I can do a paired t-test maybe?

	> t.test(loc.cov$oRAD.AvgCovRatio,loc.cov$dRAD.AvgCovRatio,paired=T)

		Paired t-test

	data:  loc.cov$oRAD.AvgCovRatio and loc.cov$dRAD.AvgCovRatio
	t = -28.323, df = 301960, p-value < 2.2e-16
	alternative hypothesis: true difference in means is not equal to 0
	95 percent confidence interval:
	 -102.99975  -89.66692
	sample estimates:
	mean of the differences 
		      -96.33334 

	> summary(loc.cov$oRAD.AvgCovRatio)
	    Min.  1st Qu.   Median     Mean  3rd Qu.     Max.     NA's 
	   0.000    1.060    3.035    8.521    7.641 3348.000        5 
	> summary(loc.cov$dRAD.AvgCovRatio)
	     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. 
	     0.01      2.38      5.85    104.90     13.78 221300.00 
     
     
Unsure why there are some with such huge numbers--ref is 576 and alt is 0.0026 (so it makes sense)
	> t.test(loc.cov$oRAD.AvgCovRatio,loc.cov$dRAD.AvgCovRatio,paired=T,alternative="less")

		Paired t-test

	data:  loc.cov$oRAD.AvgCovRatio and loc.cov$dRAD.AvgCovRatio
	t = -28.323, df = 301960, p-value < 2.2e-16
	alternative hypothesis: true difference in means is less than 0
	95 percent confidence interval:
	      -Inf -90.73871
	sample estimates:
	mean of the differences 
		      -96.33334 
		    
How about heterozygosity?
	> summary(loc.cov$oRAD.PropHet)
	   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's 
	0.00000 0.02222 0.13560 0.18190 0.26000 1.00000       5 
	> summary(loc.cov$dRAD.PropHet)
	   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
	0.00000 0.08857 0.17670 0.22440 0.31690 1.00000 
	> t.test(loc.cov$oRAD.PropHet,loc.cov$dRAD.PropHet,paired=T)

		Paired t-test

	data:  loc.cov$oRAD.PropHet and loc.cov$dRAD.PropHet
	t = -108.21, df = 301960, p-value < 2.2e-16
	alternative hypothesis: true difference in means is not equal to 0
	95 percent confidence interval:
	 -0.04323838 -0.04169985
	sample estimates:
	mean of the differences 
		    -0.04246912 

Total coverage per locus?
	> summary(loc.cov$AvgCovTotal.y)
	    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. 
	   3.523    7.750   10.850   13.480   15.240 2732.000 
	> summary(loc.cov$AvgCovTotal.x)
	    Min.  1st Qu.   Median     Mean  3rd Qu.     Max.     NA's 
	    2.75     7.46     9.27    14.44    12.04 33000.00        5 
	> t.test(loc.cov$AvgCovTotal.x,loc.cov$AvgCovTotal.y,paired=T)

		Paired t-test

	data:  loc.cov$AvgCovTotal.x and loc.cov$AvgCovTotal.y
	t = 6.1149, df = 301960, p-value = 9.675e-10
	alternative hypothesis: true difference in means is not equal to 0
	95 percent confidence interval:
	 0.6491353 1.2615620
	sample estimates:
	mean of the differences 
		      0.9553486 
		      

Proportion missing?
	> t.test(loc.cov$oRAD.PropMiss,loc.cov$dRAD.PropMiss,paired=T)

		Paired t-test

	data:  loc.cov$oRAD.PropMiss and loc.cov$dRAD.PropMiss
	t = 98.967, df = 301970, p-value < 2.2e-16
	alternative hypothesis: true difference in means is not equal to 0
	95 percent confidence interval:
	 0.03499156 0.03640553
	sample estimates:
	mean of the differences 
		     0.03569854 

	> summary(loc.cov$oRAD.PropMiss)
	   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
	 0.0000  0.1333  0.2167  0.2449  0.3333  1.0000 
	> summary(loc.cov$dRAD.PropMiss)
	   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
	0.00000 0.08333 0.17970 0.20920 0.30990 0.77860 

Private alleles/heterozygosity
	> dim(loc.cov[(loc.cov$AvgCovRef.x == 0 & loc.cov$AvgCovAlt.y == 0) | (loc.cov$AvgCovAlt.x == 0 & loc.cov$AvgCovRef.y == 0),])
	[1] 2042   19
	> dim(loc.cov[loc.cov$NumHet.x==0,])
	[1] 72307    19
	> dim(loc.cov[loc.cov$NumHet.y==0,])
	[1] 14436    19
	> dim(loc.cov[loc.cov$NumHet.x==0 & loc.cov$NumHet.y==0,])
	[1] 10031    19
	> dim(loc.cov[loc.cov$NumPresent.x == 0,])
	[1]  5 19
	
Coverage per individual (rather than per locus):
	> tapply(as.numeric(ind.cov$AvgCovTot), as.factor(ind.cov$Method),summary)
	$dRAD
	   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
	  4.537  11.410  13.520  13.630  15.570  40.290 

	$oRAD
	   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
	  8.584  11.940  14.150  15.180  17.250  34.520 

	> t.test(as.numeric(ind.cov$AvgCovTot)~as.factor(ind.cov$Method))

	Welch Two Sample t-test

	data:  as.numeric(ind.cov$AvgCovTot) by as.factor(ind.cov$Method)
	t = -2.1119, df = 69.224, p-value = 0.03831
	alternative hypothesis: true difference in means is not equal to 0
	95 percent confidence interval:
	 -3.0138505 -0.0858908
	sample estimates:
	mean in group dRAD mean in group oRAD 
			  13.62667           15.17654 

Starting to work on the in silico digest as well
->beginning with just digesting it with the restriction sites.
Q: they are palindromic, so do I not need to use the reverse complement? Should I do the 3'->5' sequence?
	Note: this is eating up the entire CPU on the virtual machine.


